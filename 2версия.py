from pyrogram import Client
import asyncio
import time
from datetime import datetime

class GiftManager:
    def __init__(self, api_id, api_hash):
        self.api_id = api_id
        self.api_hash = api_hash
        self.processed_gifts = set()
    
    async def get_detailed_balance(self, app):
        """–ü–æ–ª—É—á–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–∞–ª–∞–Ω—Å–µ –∏ –ø–æ–¥–∞—Ä–∫–∞—Ö"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥
            balance_result = await app.get_stars_balance()
            balance = balance_result if isinstance(balance_result, int) else 0
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–∞—Ä–∫–∞—Ö - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥
            gifts_generator = app.get_chat_gifts(chat_id="me")
            gifts = []
            async for gift in gifts_generator:
                gifts.append(gift)
            
            gift_count = len(gifts)
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–¥–∞—Ä–∫–∏
            convertible_gifts = 0
            total_gift_value = 0
            gift_details = []
            
            for gift in gifts:
                gift_info = {
                    'id': getattr(gift, 'id', 'Unknown'),
                    'price': getattr(gift, 'price', 0),
                    'convert_price': getattr(gift, 'convert_price', 0),
                    'can_convert': hasattr(gift, 'convert_price') and gift.convert_price > 0
                }
                
                if gift_info['can_convert']:
                    convertible_gifts += 1
                    total_gift_value += gift_info['convert_price']
                
                gift_details.append(gift_info)
            
            return {
                'balance': balance,
                'gift_count': gift_count,
                'convertible_gifts': convertible_gifts,
                'total_gift_value': total_gift_value,
                'total_assets': balance + total_gift_value,
                'gift_details': gift_details,
                'timestamp': datetime.now().strftime("%Y-%m-%d %H:%M:%S")
            }
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞: {e}")
            return None
    
    async def auto_sell_gifts(self, app):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–¥–∞–µ—Ç –≤—Å–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏"""
        try:
            print("üîç –ü–æ–∏—Å–∫ –Ω–æ–≤—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤ –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏...")
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ø–æ–¥–∞—Ä–∫–∏ - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥
            gifts_generator = app.get_chat_gifts(chat_id="me")
            gifts = []
            async for gift in gifts_generator:
                gifts.append(gift)
            
            if not gifts:
                print("üì≠ –ù–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤")
                return 0
            
            total_earned = 0
            sold_count = 0
            new_gifts = 0
            
            for gift in gifts:
                try:
                    gift_id = getattr(gift, 'id', 'unknown')
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–π –ª–∏ —ç—Ç–æ –ø–æ–¥–∞—Ä–æ–∫
                    if gift_id not in self.processed_gifts:
                        new_gifts += 1
                        self.processed_gifts.add(gift_id)
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–∂–Ω–æ –ª–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å
                        if hasattr(gift, 'convert_price') and gift.convert_price > 0:
                            print(f"üí∞ –ù–æ–≤—ã–π –ø–æ–¥–∞—Ä–æ–∫! –ü—Ä–æ–¥–∞–µ–º –∑–∞ {gift.convert_price} stars...")
                            
                            # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –ø–æ–¥–∞—Ä–æ–∫ –≤ Stars
                            result = await gift.convert()
                            total_earned += gift.convert_price
                            sold_count += 1
                            
                            print(f"‚úÖ –ü–æ–¥–∞—Ä–æ–∫ –ø—Ä–æ–¥–∞–Ω –∑–∞ {gift.convert_price} stars")
                            
                            # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏
                            await asyncio.sleep(2)
                        else:
                            print(f"üì¶ –ü–æ–ª—É—á–µ–Ω –ø–æ–¥–∞—Ä–æ–∫ (–Ω–µ–ª—å–∑—è –ø—Ä–æ–¥–∞—Ç—å)")
                    
                except Exception as e:
                    if "GIFT_ALREADY_CONVERTED" in str(e):
                        print("‚ÑπÔ∏è –ü–æ–¥–∞—Ä–æ–∫ —É–∂–µ –±—ã–ª –ø—Ä–æ–¥–∞–Ω —Ä–∞–Ω–µ–µ")
                        self.processed_gifts.add(gift_id)
                    else:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–¥–∞–∂–∏ –ø–æ–¥–∞—Ä–∫–∞: {e}")
                    continue
            
            if sold_count > 0:
                print(f"üéØ –ü—Ä–æ–¥–∞–Ω–æ –Ω–æ–≤—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤: {sold_count}")
                print(f"üíé –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ stars: {total_earned}")
            elif new_gifts > 0:
                print(f"üì¶ –ü–æ–ª—É—á–µ–Ω–æ {new_gifts} –Ω–æ–≤—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤ (–Ω–µ –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏)")
            else:
                print("‚úÖ –ù–æ–≤—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤ –Ω–µ—Ç")
                
            return total_earned
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ auto_sell_gifts: {e}")
            return 0
    
    async def send_gift_manual(self, app):
        """–†—É—á–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–¥–∞—Ä–∫–∞"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å
            status = await self.get_detailed_balance(app)
            if not status:
                return
            
            print(f"üí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {status['balance']} stars")
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏
            gifts = await app.get_available_gifts()
            print("\nüéÅ –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏:")
            
            affordable_gifts = []
            for i, gift in enumerate(gifts[:10]):
                affordable = gift.price <= status['balance']
                marker = "‚úÖ" if affordable else "‚ùå"
                print(f"{i+1}. {marker} {gift.price} stars")
                
                if affordable:
                    affordable_gifts.append((i, gift))
            
            if not affordable_gifts:
                print("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ Stars –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –ø–æ–¥–∞—Ä–∫–æ–≤")
                return
            
            gift_index = int(input("–í—ã–±–µ—Ä–∏ –Ω–æ–º–µ—Ä –ø–æ–¥–∞—Ä–∫–∞: ")) - 1
            selected_gift = gifts[gift_index]
            
            if selected_gift.price > status['balance']:
                print(f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ Stars! –ù—É–∂–Ω–æ: {selected_gift.price}, –µ—Å—Ç—å: {status['balance']}")
                return
            
            recipient = input("–í–≤–µ–¥–∏—Ç–µ username –ø–æ–ª—É—á–∞—Ç–µ–ª—è: ")
            
            print(f"üîÑ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥–∞—Ä–æ–∫ –∑–∞ {selected_gift.price} stars...")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥–∞—Ä–æ–∫
            result = await app.send_gift(
                chat_id=recipient,
                gift_id=selected_gift.id
            )
            print("‚úÖ –ü–æ–¥–∞—Ä–æ–∫ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å
            new_status = await self.get_detailed_balance(app)
            if new_status:
                print(f"üí∞ –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {new_status['balance']} stars")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥–∞—Ä–∫–∞: {e}")
    
    async def display_status(self, app):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –±–∞–ª–∞–Ω—Å–∞ –∏ –ø–æ–¥–∞—Ä–∫–æ–≤"""
        status = await self.get_detailed_balance(app)
        if status:
            print(f"\nüìä –°–¢–ê–¢–£–° –ê–ö–ö–ê–£–ù–¢–ê [{status['timestamp']}]")
            print("=" * 40)
            print(f"üí∞ –ë–∞–ª–∞–Ω—Å Stars: {status['balance']}")
            print(f"üéÅ –í—Å–µ–≥–æ –ø–æ–¥–∞—Ä–∫–æ–≤: {status['gift_count']}")
            print(f"üí∏ –ú–æ–∂–Ω–æ –ø—Ä–æ–¥–∞—Ç—å: {status['convertible_gifts']}")
            print(f"üìà –°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–∞—Ä–∫–æ–≤: {status['total_gift_value']} stars")
            print(f"üíé –û–±—â–∏–µ –∞–∫—Ç–∏–≤—ã: {status['total_assets']} stars")
            print("=" * 40)
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –ø–æ–¥–∞—Ä–∫–æ–≤
            if status['gift_details']:
                print("\nüì¶ –î–µ—Ç–∞–ª–∏ –ø–æ–¥–∞—Ä–∫–æ–≤:")
                for i, gift in enumerate(status['gift_details'][:5]):
                    status_icon = "üí∏" if gift['can_convert'] else "üéÅ"
                    print(f"  {i+1}. {status_icon} –¶–µ–Ω–∞: {gift['price']} | –ü—Ä–æ–¥–∞–∂–∞: {gift['convert_price']} stars")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∞–∫–∫–∞—É–Ω—Ç–∞")
    
    async def auto_monitor(self, app, interval=30):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –ø—Ä–æ–¥–∞–∂–∞ –ø–æ–¥–∞—Ä–∫–æ–≤"""
        print(f"üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∞ (–∏–Ω—Ç–µ—Ä–≤–∞–ª: {interval} —Å–µ–∫)")
        print("‚èπÔ∏è  –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
        
        try:
            while True:
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
                await self.display_status(app)
                
                # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–¥–∞–µ–º –ø–æ–¥–∞—Ä–∫–∏
                earned = await self.auto_sell_gifts(app)
                if earned > 0:
                    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –ø—Ä–æ–¥–∞–∂–∏
                    print("\nüîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ—Å–ª–µ –ø—Ä–æ–¥–∞–∂–∏...")
                    await self.display_status(app)
                
                print(f"\n‚è∞ –°–ª–µ–¥—É—é—â–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ {interval} —Å–µ–∫—É–Ω–¥...")
                await asyncio.sleep(interval)
                
        except KeyboardInterrupt:
            print("\nüõë –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–æ–Ω–∏—Ç–æ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    async def run(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø—Ä–æ–≥—Ä–∞–º–º—ã"""
        async with Client("my_account", api_id=self.api_id, api_hash=self.api_hash) as app:
            while True:
                print("\n" + "="*50)
                print("ü§ñ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –ú–ï–ù–ï–î–ñ–ï–† –ü–û–î–ê–†–ö–û–í")
                print("="*50)
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
                await self.display_status(app)
                
                print("\n1Ô∏è‚É£ - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–¥–∞—Ç—å –≤—Å–µ –ø–æ–¥–∞—Ä–∫–∏")
                print("2Ô∏è‚É£ - –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫")
                print("3Ô∏è‚É£ - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ (30 —Å–µ–∫)")
                print("4Ô∏è‚É£ - –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å")
                print("5Ô∏è‚É£ - –í—ã–π—Ç–∏")
                
                choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ")
                
                if choice == "1":
                    earned = await self.auto_sell_gifts(app)
                    if earned > 0:
                        print("\nüîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ—Å–ª–µ –ø—Ä–æ–¥–∞–∂–∏...")
                        await self.display_status(app)
                
                elif choice == "2":
                    await self.send_gift_manual(app)
                
                elif choice == "3":
                    await self.auto_monitor(app)
                
                elif choice == "4":
                    await self.display_status(app)
                
                elif choice == "5":
                    print("üëã –í—ã—Ö–æ–¥...")
                    break
                
                else:
                    print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
                
                await asyncio.sleep(1)

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã
if __name__ == "__main__":
    # –¢–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ
    API_ID = 27437512
    API_HASH = '0182ac185d966c3dc8ac4ec256e27c8c'
    
    print("üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ–¥–∞—Ä–∫–æ–≤...")
    manager = GiftManager(API_ID, API_HASH)
    asyncio.run(manager.run())